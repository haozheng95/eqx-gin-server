/*
 * Metal API
 *
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package startapi

type VrfVirtualCircuitCreateInput struct {

	// An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.
	CustomerIp string `json:"customer_ip,omitempty"`

	Description string `json:"description,omitempty"`

	// The MD5 password for the BGP peering in plaintext (not a checksum).
	Md5 *string `json:"md5,omitempty"`

	// An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.
	MetalIp string `json:"metal_ip,omitempty"`

	Name string `json:"name,omitempty"`

	NniVlan int32 `json:"nni_vlan"`

	// The peer ASN that will be used with the VRF on the Virtual Circuit.
	PeerAsn int32 `json:"peer_asn"`

	Project string `json:"project"`

	// speed can be passed as integer number representing bps speed or string (e.g. '52m' or '100g' or '4 gbps')
	Speed int32 `json:"speed,omitempty"`

	// The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP. The subnet specified must be contained within an already-defined IP Range for the VRF.
	Subnet string `json:"subnet"`

	Tags []string `json:"tags,omitempty"`

	// The UUID of the VRF that will be associated with the Virtual Circuit.
	Vrf string `json:"vrf"`
}
