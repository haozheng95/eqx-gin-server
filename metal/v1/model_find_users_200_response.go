/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindUsers200Response struct for FindUsers200Response
type FindUsers200Response struct {
	Meta  *FindDeviceEvents200ResponseMeta                                                               `json:"meta,omitempty"`
	Users []GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy `json:"users,omitempty"`
}

// NewFindUsers200Response instantiates a new FindUsers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindUsers200Response() *FindUsers200Response {
	this := FindUsers200Response{}
	return &this
}

// NewFindUsers200ResponseWithDefaults instantiates a new FindUsers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindUsers200ResponseWithDefaults() *FindUsers200Response {
	this := FindUsers200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *FindUsers200Response) GetMeta() FindDeviceEvents200ResponseMeta {
	if o == nil || o.Meta == nil {
		var ret FindDeviceEvents200ResponseMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindUsers200Response) GetMetaOk() (*FindDeviceEvents200ResponseMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *FindUsers200Response) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given FindDeviceEvents200ResponseMeta and assigns it to the Meta field.
func (o *FindUsers200Response) SetMeta(v FindDeviceEvents200ResponseMeta) {
	o.Meta = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *FindUsers200Response) GetUsers() []GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy {
	if o == nil || o.Users == nil {
		var ret []GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindUsers200Response) GetUsersOk() ([]GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *FindUsers200Response) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy and assigns it to the Users field.
func (o *FindUsers200Response) SetUsers(v []GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfCreatedBy) {
	o.Users = v
}

func (o FindUsers200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableFindUsers200Response struct {
	value *FindUsers200Response
	isSet bool
}

func (v NullableFindUsers200Response) Get() *FindUsers200Response {
	return v.value
}

func (v *NullableFindUsers200Response) Set(val *FindUsers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindUsers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindUsers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindUsers200Response(val *FindUsers200Response) *NullableFindUsers200Response {
	return &NullableFindUsers200Response{value: val, isSet: true}
}

func (v NullableFindUsers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindUsers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
