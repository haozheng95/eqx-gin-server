/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// Metadata struct for Metadata
type Metadata struct {
	Class      *string                `json:"class,omitempty"`
	Customdata map[string]interface{} `json:"customdata,omitempty"`
	// The facility code of the instance
	Facility *string `json:"facility,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Id       *string `json:"id,omitempty"`
	Iqn      *string `json:"iqn,omitempty"`
	// The metro code of the instance
	Metro           *string                                   `json:"metro,omitempty"`
	Network         *FindDeviceMetadataByID200ResponseNetwork `json:"network,omitempty"`
	OperatingSystem map[string]interface{}                    `json:"operating_system,omitempty"`
	// The plan slug of the instance
	Plan *string `json:"plan,omitempty"`
	// An array of the private subnets
	PrivateSubnets []string `json:"private_subnets,omitempty"`
	Reserved       *bool    `json:"reserved,omitempty"`
	// The specs of the plan version of the instance
	Specs         map[string]interface{} `json:"specs,omitempty"`
	SshKeys       []string               `json:"ssh_keys,omitempty"`
	SwitchShortId *string                `json:"switch_short_id,omitempty"`
	Tags          []string               `json:"tags,omitempty"`
	Volumes       []string               `json:"volumes,omitempty"`
}

// NewMetadata instantiates a new Metadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadata() *Metadata {
	this := Metadata{}
	return &this
}

// NewMetadataWithDefaults instantiates a new Metadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataWithDefaults() *Metadata {
	this := Metadata{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Metadata) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *Metadata) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Metadata) SetClass(v string) {
	o.Class = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *Metadata) GetCustomdata() map[string]interface{} {
	if o == nil || o.Customdata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetCustomdataOk() (map[string]interface{}, bool) {
	if o == nil || o.Customdata == nil {
		return nil, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *Metadata) HasCustomdata() bool {
	if o != nil && o.Customdata != nil {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *Metadata) SetCustomdata(v map[string]interface{}) {
	o.Customdata = v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *Metadata) GetFacility() string {
	if o == nil || o.Facility == nil {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetFacilityOk() (*string, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *Metadata) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *Metadata) SetFacility(v string) {
	o.Facility = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *Metadata) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *Metadata) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *Metadata) SetHostname(v string) {
	o.Hostname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Metadata) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Metadata) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Metadata) SetId(v string) {
	o.Id = &v
}

// GetIqn returns the Iqn field value if set, zero value otherwise.
func (o *Metadata) GetIqn() string {
	if o == nil || o.Iqn == nil {
		var ret string
		return ret
	}
	return *o.Iqn
}

// GetIqnOk returns a tuple with the Iqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetIqnOk() (*string, bool) {
	if o == nil || o.Iqn == nil {
		return nil, false
	}
	return o.Iqn, true
}

// HasIqn returns a boolean if a field has been set.
func (o *Metadata) HasIqn() bool {
	if o != nil && o.Iqn != nil {
		return true
	}

	return false
}

// SetIqn gets a reference to the given string and assigns it to the Iqn field.
func (o *Metadata) SetIqn(v string) {
	o.Iqn = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *Metadata) GetMetro() string {
	if o == nil || o.Metro == nil {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetMetroOk() (*string, bool) {
	if o == nil || o.Metro == nil {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *Metadata) HasMetro() bool {
	if o != nil && o.Metro != nil {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *Metadata) SetMetro(v string) {
	o.Metro = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Metadata) GetNetwork() FindDeviceMetadataByID200ResponseNetwork {
	if o == nil || o.Network == nil {
		var ret FindDeviceMetadataByID200ResponseNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetNetworkOk() (*FindDeviceMetadataByID200ResponseNetwork, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Metadata) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given FindDeviceMetadataByID200ResponseNetwork and assigns it to the Network field.
func (o *Metadata) SetNetwork(v FindDeviceMetadataByID200ResponseNetwork) {
	o.Network = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *Metadata) GetOperatingSystem() map[string]interface{} {
	if o == nil || o.OperatingSystem == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetOperatingSystemOk() (map[string]interface{}, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *Metadata) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given map[string]interface{} and assigns it to the OperatingSystem field.
func (o *Metadata) SetOperatingSystem(v map[string]interface{}) {
	o.OperatingSystem = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Metadata) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *Metadata) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *Metadata) SetPlan(v string) {
	o.Plan = &v
}

// GetPrivateSubnets returns the PrivateSubnets field value if set, zero value otherwise.
func (o *Metadata) GetPrivateSubnets() []string {
	if o == nil || o.PrivateSubnets == nil {
		var ret []string
		return ret
	}
	return o.PrivateSubnets
}

// GetPrivateSubnetsOk returns a tuple with the PrivateSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetPrivateSubnetsOk() ([]string, bool) {
	if o == nil || o.PrivateSubnets == nil {
		return nil, false
	}
	return o.PrivateSubnets, true
}

// HasPrivateSubnets returns a boolean if a field has been set.
func (o *Metadata) HasPrivateSubnets() bool {
	if o != nil && o.PrivateSubnets != nil {
		return true
	}

	return false
}

// SetPrivateSubnets gets a reference to the given []string and assigns it to the PrivateSubnets field.
func (o *Metadata) SetPrivateSubnets(v []string) {
	o.PrivateSubnets = v
}

// GetReserved returns the Reserved field value if set, zero value otherwise.
func (o *Metadata) GetReserved() bool {
	if o == nil || o.Reserved == nil {
		var ret bool
		return ret
	}
	return *o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetReservedOk() (*bool, bool) {
	if o == nil || o.Reserved == nil {
		return nil, false
	}
	return o.Reserved, true
}

// HasReserved returns a boolean if a field has been set.
func (o *Metadata) HasReserved() bool {
	if o != nil && o.Reserved != nil {
		return true
	}

	return false
}

// SetReserved gets a reference to the given bool and assigns it to the Reserved field.
func (o *Metadata) SetReserved(v bool) {
	o.Reserved = &v
}

// GetSpecs returns the Specs field value if set, zero value otherwise.
func (o *Metadata) GetSpecs() map[string]interface{} {
	if o == nil || o.Specs == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Specs
}

// GetSpecsOk returns a tuple with the Specs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetSpecsOk() (map[string]interface{}, bool) {
	if o == nil || o.Specs == nil {
		return nil, false
	}
	return o.Specs, true
}

// HasSpecs returns a boolean if a field has been set.
func (o *Metadata) HasSpecs() bool {
	if o != nil && o.Specs != nil {
		return true
	}

	return false
}

// SetSpecs gets a reference to the given map[string]interface{} and assigns it to the Specs field.
func (o *Metadata) SetSpecs(v map[string]interface{}) {
	o.Specs = v
}

// GetSshKeys returns the SshKeys field value if set, zero value otherwise.
func (o *Metadata) GetSshKeys() []string {
	if o == nil || o.SshKeys == nil {
		var ret []string
		return ret
	}
	return o.SshKeys
}

// GetSshKeysOk returns a tuple with the SshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetSshKeysOk() ([]string, bool) {
	if o == nil || o.SshKeys == nil {
		return nil, false
	}
	return o.SshKeys, true
}

// HasSshKeys returns a boolean if a field has been set.
func (o *Metadata) HasSshKeys() bool {
	if o != nil && o.SshKeys != nil {
		return true
	}

	return false
}

// SetSshKeys gets a reference to the given []string and assigns it to the SshKeys field.
func (o *Metadata) SetSshKeys(v []string) {
	o.SshKeys = v
}

// GetSwitchShortId returns the SwitchShortId field value if set, zero value otherwise.
func (o *Metadata) GetSwitchShortId() string {
	if o == nil || o.SwitchShortId == nil {
		var ret string
		return ret
	}
	return *o.SwitchShortId
}

// GetSwitchShortIdOk returns a tuple with the SwitchShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetSwitchShortIdOk() (*string, bool) {
	if o == nil || o.SwitchShortId == nil {
		return nil, false
	}
	return o.SwitchShortId, true
}

// HasSwitchShortId returns a boolean if a field has been set.
func (o *Metadata) HasSwitchShortId() bool {
	if o != nil && o.SwitchShortId != nil {
		return true
	}

	return false
}

// SetSwitchShortId gets a reference to the given string and assigns it to the SwitchShortId field.
func (o *Metadata) SetSwitchShortId(v string) {
	o.SwitchShortId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Metadata) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Metadata) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Metadata) SetTags(v []string) {
	o.Tags = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *Metadata) GetVolumes() []string {
	if o == nil || o.Volumes == nil {
		var ret []string
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metadata) GetVolumesOk() ([]string, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *Metadata) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []string and assigns it to the Volumes field.
func (o *Metadata) SetVolumes(v []string) {
	o.Volumes = v
}

func (o Metadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Class != nil {
		toSerialize["class"] = o.Class
	}
	if o.Customdata != nil {
		toSerialize["customdata"] = o.Customdata
	}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Iqn != nil {
		toSerialize["iqn"] = o.Iqn
	}
	if o.Metro != nil {
		toSerialize["metro"] = o.Metro
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.PrivateSubnets != nil {
		toSerialize["private_subnets"] = o.PrivateSubnets
	}
	if o.Reserved != nil {
		toSerialize["reserved"] = o.Reserved
	}
	if o.Specs != nil {
		toSerialize["specs"] = o.Specs
	}
	if o.SshKeys != nil {
		toSerialize["ssh_keys"] = o.SshKeys
	}
	if o.SwitchShortId != nil {
		toSerialize["switch_short_id"] = o.SwitchShortId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	return json.Marshal(toSerialize)
}

type NullableMetadata struct {
	value *Metadata
	isSet bool
}

func (v NullableMetadata) Get() *Metadata {
	return v.value
}

func (v *NullableMetadata) Set(val *Metadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadata(val *Metadata) *NullableMetadata {
	return &NullableMetadata{value: val, isSet: true}
}

func (v NullableMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
