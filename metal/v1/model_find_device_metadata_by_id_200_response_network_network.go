/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindDeviceMetadataByID200ResponseNetworkNetwork struct for FindDeviceMetadataByID200ResponseNetworkNetwork
type FindDeviceMetadataByID200ResponseNetworkNetwork struct {
	Bonding *FindDeviceMetadataByID200ResponseNetworkNetworkBonding `json:"bonding,omitempty"`
}

// NewFindDeviceMetadataByID200ResponseNetworkNetwork instantiates a new FindDeviceMetadataByID200ResponseNetworkNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindDeviceMetadataByID200ResponseNetworkNetwork() *FindDeviceMetadataByID200ResponseNetworkNetwork {
	this := FindDeviceMetadataByID200ResponseNetworkNetwork{}
	return &this
}

// NewFindDeviceMetadataByID200ResponseNetworkNetworkWithDefaults instantiates a new FindDeviceMetadataByID200ResponseNetworkNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindDeviceMetadataByID200ResponseNetworkNetworkWithDefaults() *FindDeviceMetadataByID200ResponseNetworkNetwork {
	this := FindDeviceMetadataByID200ResponseNetworkNetwork{}
	return &this
}

// GetBonding returns the Bonding field value if set, zero value otherwise.
func (o *FindDeviceMetadataByID200ResponseNetworkNetwork) GetBonding() FindDeviceMetadataByID200ResponseNetworkNetworkBonding {
	if o == nil || o.Bonding == nil {
		var ret FindDeviceMetadataByID200ResponseNetworkNetworkBonding
		return ret
	}
	return *o.Bonding
}

// GetBondingOk returns a tuple with the Bonding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetwork) GetBondingOk() (*FindDeviceMetadataByID200ResponseNetworkNetworkBonding, bool) {
	if o == nil || o.Bonding == nil {
		return nil, false
	}
	return o.Bonding, true
}

// HasBonding returns a boolean if a field has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetwork) HasBonding() bool {
	if o != nil && o.Bonding != nil {
		return true
	}

	return false
}

// SetBonding gets a reference to the given FindDeviceMetadataByID200ResponseNetworkNetworkBonding and assigns it to the Bonding field.
func (o *FindDeviceMetadataByID200ResponseNetworkNetwork) SetBonding(v FindDeviceMetadataByID200ResponseNetworkNetworkBonding) {
	o.Bonding = &v
}

func (o FindDeviceMetadataByID200ResponseNetworkNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bonding != nil {
		toSerialize["bonding"] = o.Bonding
	}
	return json.Marshal(toSerialize)
}

type NullableFindDeviceMetadataByID200ResponseNetworkNetwork struct {
	value *FindDeviceMetadataByID200ResponseNetworkNetwork
	isSet bool
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetwork) Get() *FindDeviceMetadataByID200ResponseNetworkNetwork {
	return v.value
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetwork) Set(val *FindDeviceMetadataByID200ResponseNetworkNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindDeviceMetadataByID200ResponseNetworkNetwork(val *FindDeviceMetadataByID200ResponseNetworkNetwork) *NullableFindDeviceMetadataByID200ResponseNetworkNetwork {
	return &NullableFindDeviceMetadataByID200ResponseNetworkNetwork{value: val, isSet: true}
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
