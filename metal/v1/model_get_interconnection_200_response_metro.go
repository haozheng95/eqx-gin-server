/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// GetInterconnection200ResponseMetro The location of where the shared or Dedicated Port is located. For interconnections with Dedicated Ports,   this will be the location of the Dedicated Ports. For Fabric VCs (Metal Billed), this is where interconnection will be originating from, as we pre-authorize the use of one of our shared ports   as the origin of the interconnection using A-Side service tokens. We only allow local connections for Fabric VCs (Metal Billed), so the destination location must be the same as the origin. For Fabric VCs (Fabric Billed),    this will be the destination of the interconnection. We allow remote connections for Fabric VCs (Fabric Billed), so the origin of the interconnection can be a different metro set here. For access to Fabric VCs, which are not generally available   please contact our Support Team for more details.
type GetInterconnection200ResponseMetro struct {
	Code    *string `json:"code,omitempty"`
	Country *string `json:"country,omitempty"`
	Id      *string `json:"id,omitempty"`
	Name    *string `json:"name,omitempty"`
}

// NewGetInterconnection200ResponseMetro instantiates a new GetInterconnection200ResponseMetro object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInterconnection200ResponseMetro() *GetInterconnection200ResponseMetro {
	this := GetInterconnection200ResponseMetro{}
	return &this
}

// NewGetInterconnection200ResponseMetroWithDefaults instantiates a new GetInterconnection200ResponseMetro object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInterconnection200ResponseMetroWithDefaults() *GetInterconnection200ResponseMetro {
	this := GetInterconnection200ResponseMetro{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetInterconnection200ResponseMetro) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterconnection200ResponseMetro) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetInterconnection200ResponseMetro) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetInterconnection200ResponseMetro) SetCode(v string) {
	o.Code = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *GetInterconnection200ResponseMetro) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterconnection200ResponseMetro) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *GetInterconnection200ResponseMetro) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *GetInterconnection200ResponseMetro) SetCountry(v string) {
	o.Country = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetInterconnection200ResponseMetro) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterconnection200ResponseMetro) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetInterconnection200ResponseMetro) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetInterconnection200ResponseMetro) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetInterconnection200ResponseMetro) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterconnection200ResponseMetro) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetInterconnection200ResponseMetro) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetInterconnection200ResponseMetro) SetName(v string) {
	o.Name = &v
}

func (o GetInterconnection200ResponseMetro) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableGetInterconnection200ResponseMetro struct {
	value *GetInterconnection200ResponseMetro
	isSet bool
}

func (v NullableGetInterconnection200ResponseMetro) Get() *GetInterconnection200ResponseMetro {
	return v.value
}

func (v *NullableGetInterconnection200ResponseMetro) Set(val *GetInterconnection200ResponseMetro) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInterconnection200ResponseMetro) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInterconnection200ResponseMetro) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInterconnection200ResponseMetro(val *GetInterconnection200ResponseMetro) *NullableGetInterconnection200ResponseMetro {
	return &NullableGetInterconnection200ResponseMetro{value: val, isSet: true}
}

func (v NullableGetInterconnection200ResponseMetro) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInterconnection200ResponseMetro) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
