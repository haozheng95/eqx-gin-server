/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindDeviceById200ResponsePlanAvailableInMetrosInner struct for FindDeviceById200ResponsePlanAvailableInMetrosInner
type FindDeviceById200ResponsePlanAvailableInMetrosInner struct {
	// href to the Metro
	Href  *string                                             `json:"href,omitempty"`
	Price *FindDeviceById200ResponsePlanAvailableInInnerPrice `json:"price,omitempty"`
}

// NewFindDeviceById200ResponsePlanAvailableInMetrosInner instantiates a new FindDeviceById200ResponsePlanAvailableInMetrosInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindDeviceById200ResponsePlanAvailableInMetrosInner() *FindDeviceById200ResponsePlanAvailableInMetrosInner {
	this := FindDeviceById200ResponsePlanAvailableInMetrosInner{}
	return &this
}

// NewFindDeviceById200ResponsePlanAvailableInMetrosInnerWithDefaults instantiates a new FindDeviceById200ResponsePlanAvailableInMetrosInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindDeviceById200ResponsePlanAvailableInMetrosInnerWithDefaults() *FindDeviceById200ResponsePlanAvailableInMetrosInner {
	this := FindDeviceById200ResponsePlanAvailableInMetrosInner{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) SetHref(v string) {
	o.Href = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) GetPrice() FindDeviceById200ResponsePlanAvailableInInnerPrice {
	if o == nil || o.Price == nil {
		var ret FindDeviceById200ResponsePlanAvailableInInnerPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) GetPriceOk() (*FindDeviceById200ResponsePlanAvailableInInnerPrice, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given FindDeviceById200ResponsePlanAvailableInInnerPrice and assigns it to the Price field.
func (o *FindDeviceById200ResponsePlanAvailableInMetrosInner) SetPrice(v FindDeviceById200ResponsePlanAvailableInInnerPrice) {
	o.Price = &v
}

func (o FindDeviceById200ResponsePlanAvailableInMetrosInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableFindDeviceById200ResponsePlanAvailableInMetrosInner struct {
	value *FindDeviceById200ResponsePlanAvailableInMetrosInner
	isSet bool
}

func (v NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) Get() *FindDeviceById200ResponsePlanAvailableInMetrosInner {
	return v.value
}

func (v *NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) Set(val *FindDeviceById200ResponsePlanAvailableInMetrosInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindDeviceById200ResponsePlanAvailableInMetrosInner(val *FindDeviceById200ResponsePlanAvailableInMetrosInner) *NullableFindDeviceById200ResponsePlanAvailableInMetrosInner {
	return &NullableFindDeviceById200ResponsePlanAvailableInMetrosInner{value: val, isSet: true}
}

func (v NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindDeviceById200ResponsePlanAvailableInMetrosInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
