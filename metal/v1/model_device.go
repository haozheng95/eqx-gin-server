/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// Device struct for Device
type Device struct {
	AlwaysPxe           *bool                                       `json:"always_pxe,omitempty"`
	BillingCycle        *string                                     `json:"billing_cycle,omitempty"`
	BondingMode         *int32                                      `json:"bonding_mode,omitempty"`
	CreatedAt           *time.Time                                  `json:"created_at,omitempty"`
	CreatedBy           *FindDeviceById200ResponseCreatedBy         `json:"created_by,omitempty"`
	Customdata          map[string]interface{}                      `json:"customdata,omitempty"`
	Description         *string                                     `json:"description,omitempty"`
	Facility            *FindDeviceById200ResponseFacility          `json:"facility,omitempty"`
	HardwareReservation *FindBatchById200ResponseDevicesInner       `json:"hardware_reservation,omitempty"`
	Hostname            *string                                     `json:"hostname,omitempty"`
	Href                *string                                     `json:"href,omitempty"`
	Id                  *string                                     `json:"id,omitempty"`
	ImageUrl            *string                                     `json:"image_url,omitempty"`
	IpAddresses         []FindDeviceById200ResponseIpAddressesInner `json:"ip_addresses,omitempty"`
	IpxeScriptUrl       *string                                     `json:"ipxe_script_url,omitempty"`
	Iqn                 *string                                     `json:"iqn,omitempty"`
	Locked              *bool                                       `json:"locked,omitempty"`
	Metro               *FindDeviceById200ResponseFacilityMetro     `json:"metro,omitempty"`
	// By default, servers at Equinix Metal are configured in a “bonded” mode using LACP (Link Aggregation Control Protocol). Each 2-NIC server is configured with a single bond (namely bond0) with both interfaces eth0 and eth1 as members of the bond in a default Layer 3 mode. Some device plans may have a different number of ports and bonds available.
	NetworkPorts    []FindDeviceById200ResponseNetworkPortsInner `json:"network_ports,omitempty"`
	OperatingSystem *FindDeviceById200ResponseOperatingSystem    `json:"operating_system,omitempty"`
	// Actions supported by the device instance.
	Actions            []FindDeviceById200ResponseActionsInner `json:"actions,omitempty"`
	Plan               *FindDeviceById200ResponsePlan          `json:"plan,omitempty"`
	Project            *FindDeviceById200ResponseProject       `json:"project,omitempty"`
	ProjectLite        *FindDeviceById200ResponseProjectLite   `json:"project_lite,omitempty"`
	ProvisioningEvents []FindInterconnectionEvents200Response  `json:"provisioning_events,omitempty"`
	// Only visible while device provisioning
	ProvisioningPercentage *float32 `json:"provisioning_percentage,omitempty"`
	// Root password is automatically generated when server is provisioned and it is removed after 24 hours
	RootPassword *string `json:"root_password,omitempty"`
	ShortId      *string `json:"short_id,omitempty"`
	// Whether or not the device is a spot instance.
	SpotInstance *bool `json:"spot_instance,omitempty"`
	// The maximum price per hour you are willing to pay to keep this spot instance.  If you are outbid, the termination will be set allowing two minutes before shutdown.
	SpotPriceMax *float32                               `json:"spot_price_max,omitempty"`
	SshKeys      []FindBatchById200ResponseDevicesInner `json:"ssh_keys,omitempty"`
	State        *string                                `json:"state,omitempty"`
	// Switch short id. This can be used to determine if two devices are connected to the same switch, for example.
	SwitchUuid *string  `json:"switch_uuid,omitempty"`
	Tags       []string `json:"tags,omitempty"`
	// When the device will be terminated. This is commonly set in advance for ephemeral spot market instances but this field may also be set with on-demand and reservation instances to automatically delete the resource at a given time. The termination time can also be used to release a hardware reservation instance at a given time, keeping the reservation open for other uses.  On a spot market device, the termination time will be set automatically when outbid.
	TerminationTime *time.Time                             `json:"termination_time,omitempty"`
	UpdatedAt       *time.Time                             `json:"updated_at,omitempty"`
	User            *string                                `json:"user,omitempty"`
	Userdata        *string                                `json:"userdata,omitempty"`
	Volumes         []FindBatchById200ResponseDevicesInner `json:"volumes,omitempty"`
}

// NewDevice instantiates a new Device object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevice() *Device {
	this := Device{}
	return &this
}

// NewDeviceWithDefaults instantiates a new Device object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceWithDefaults() *Device {
	this := Device{}
	return &this
}

// GetAlwaysPxe returns the AlwaysPxe field value if set, zero value otherwise.
func (o *Device) GetAlwaysPxe() bool {
	if o == nil || o.AlwaysPxe == nil {
		var ret bool
		return ret
	}
	return *o.AlwaysPxe
}

// GetAlwaysPxeOk returns a tuple with the AlwaysPxe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetAlwaysPxeOk() (*bool, bool) {
	if o == nil || o.AlwaysPxe == nil {
		return nil, false
	}
	return o.AlwaysPxe, true
}

// HasAlwaysPxe returns a boolean if a field has been set.
func (o *Device) HasAlwaysPxe() bool {
	if o != nil && o.AlwaysPxe != nil {
		return true
	}

	return false
}

// SetAlwaysPxe gets a reference to the given bool and assigns it to the AlwaysPxe field.
func (o *Device) SetAlwaysPxe(v bool) {
	o.AlwaysPxe = &v
}

// GetBillingCycle returns the BillingCycle field value if set, zero value otherwise.
func (o *Device) GetBillingCycle() string {
	if o == nil || o.BillingCycle == nil {
		var ret string
		return ret
	}
	return *o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetBillingCycleOk() (*string, bool) {
	if o == nil || o.BillingCycle == nil {
		return nil, false
	}
	return o.BillingCycle, true
}

// HasBillingCycle returns a boolean if a field has been set.
func (o *Device) HasBillingCycle() bool {
	if o != nil && o.BillingCycle != nil {
		return true
	}

	return false
}

// SetBillingCycle gets a reference to the given string and assigns it to the BillingCycle field.
func (o *Device) SetBillingCycle(v string) {
	o.BillingCycle = &v
}

// GetBondingMode returns the BondingMode field value if set, zero value otherwise.
func (o *Device) GetBondingMode() int32 {
	if o == nil || o.BondingMode == nil {
		var ret int32
		return ret
	}
	return *o.BondingMode
}

// GetBondingModeOk returns a tuple with the BondingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetBondingModeOk() (*int32, bool) {
	if o == nil || o.BondingMode == nil {
		return nil, false
	}
	return o.BondingMode, true
}

// HasBondingMode returns a boolean if a field has been set.
func (o *Device) HasBondingMode() bool {
	if o != nil && o.BondingMode != nil {
		return true
	}

	return false
}

// SetBondingMode gets a reference to the given int32 and assigns it to the BondingMode field.
func (o *Device) SetBondingMode(v int32) {
	o.BondingMode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Device) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Device) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Device) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Device) GetCreatedBy() FindDeviceById200ResponseCreatedBy {
	if o == nil || o.CreatedBy == nil {
		var ret FindDeviceById200ResponseCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetCreatedByOk() (*FindDeviceById200ResponseCreatedBy, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Device) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given FindDeviceById200ResponseCreatedBy and assigns it to the CreatedBy field.
func (o *Device) SetCreatedBy(v FindDeviceById200ResponseCreatedBy) {
	o.CreatedBy = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *Device) GetCustomdata() map[string]interface{} {
	if o == nil || o.Customdata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetCustomdataOk() (map[string]interface{}, bool) {
	if o == nil || o.Customdata == nil {
		return nil, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *Device) HasCustomdata() bool {
	if o != nil && o.Customdata != nil {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *Device) SetCustomdata(v map[string]interface{}) {
	o.Customdata = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Device) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Device) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Device) SetDescription(v string) {
	o.Description = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *Device) GetFacility() FindDeviceById200ResponseFacility {
	if o == nil || o.Facility == nil {
		var ret FindDeviceById200ResponseFacility
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetFacilityOk() (*FindDeviceById200ResponseFacility, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *Device) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given FindDeviceById200ResponseFacility and assigns it to the Facility field.
func (o *Device) SetFacility(v FindDeviceById200ResponseFacility) {
	o.Facility = &v
}

// GetHardwareReservation returns the HardwareReservation field value if set, zero value otherwise.
func (o *Device) GetHardwareReservation() FindBatchById200ResponseDevicesInner {
	if o == nil || o.HardwareReservation == nil {
		var ret FindBatchById200ResponseDevicesInner
		return ret
	}
	return *o.HardwareReservation
}

// GetHardwareReservationOk returns a tuple with the HardwareReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetHardwareReservationOk() (*FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || o.HardwareReservation == nil {
		return nil, false
	}
	return o.HardwareReservation, true
}

// HasHardwareReservation returns a boolean if a field has been set.
func (o *Device) HasHardwareReservation() bool {
	if o != nil && o.HardwareReservation != nil {
		return true
	}

	return false
}

// SetHardwareReservation gets a reference to the given FindBatchById200ResponseDevicesInner and assigns it to the HardwareReservation field.
func (o *Device) SetHardwareReservation(v FindBatchById200ResponseDevicesInner) {
	o.HardwareReservation = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *Device) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *Device) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *Device) SetHostname(v string) {
	o.Hostname = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Device) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Device) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Device) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Device) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Device) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Device) SetId(v string) {
	o.Id = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *Device) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *Device) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *Device) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *Device) GetIpAddresses() []FindDeviceById200ResponseIpAddressesInner {
	if o == nil || o.IpAddresses == nil {
		var ret []FindDeviceById200ResponseIpAddressesInner
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetIpAddressesOk() ([]FindDeviceById200ResponseIpAddressesInner, bool) {
	if o == nil || o.IpAddresses == nil {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *Device) HasIpAddresses() bool {
	if o != nil && o.IpAddresses != nil {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []FindDeviceById200ResponseIpAddressesInner and assigns it to the IpAddresses field.
func (o *Device) SetIpAddresses(v []FindDeviceById200ResponseIpAddressesInner) {
	o.IpAddresses = v
}

// GetIpxeScriptUrl returns the IpxeScriptUrl field value if set, zero value otherwise.
func (o *Device) GetIpxeScriptUrl() string {
	if o == nil || o.IpxeScriptUrl == nil {
		var ret string
		return ret
	}
	return *o.IpxeScriptUrl
}

// GetIpxeScriptUrlOk returns a tuple with the IpxeScriptUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetIpxeScriptUrlOk() (*string, bool) {
	if o == nil || o.IpxeScriptUrl == nil {
		return nil, false
	}
	return o.IpxeScriptUrl, true
}

// HasIpxeScriptUrl returns a boolean if a field has been set.
func (o *Device) HasIpxeScriptUrl() bool {
	if o != nil && o.IpxeScriptUrl != nil {
		return true
	}

	return false
}

// SetIpxeScriptUrl gets a reference to the given string and assigns it to the IpxeScriptUrl field.
func (o *Device) SetIpxeScriptUrl(v string) {
	o.IpxeScriptUrl = &v
}

// GetIqn returns the Iqn field value if set, zero value otherwise.
func (o *Device) GetIqn() string {
	if o == nil || o.Iqn == nil {
		var ret string
		return ret
	}
	return *o.Iqn
}

// GetIqnOk returns a tuple with the Iqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetIqnOk() (*string, bool) {
	if o == nil || o.Iqn == nil {
		return nil, false
	}
	return o.Iqn, true
}

// HasIqn returns a boolean if a field has been set.
func (o *Device) HasIqn() bool {
	if o != nil && o.Iqn != nil {
		return true
	}

	return false
}

// SetIqn gets a reference to the given string and assigns it to the Iqn field.
func (o *Device) SetIqn(v string) {
	o.Iqn = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *Device) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Device) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *Device) SetLocked(v bool) {
	o.Locked = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *Device) GetMetro() FindDeviceById200ResponseFacilityMetro {
	if o == nil || o.Metro == nil {
		var ret FindDeviceById200ResponseFacilityMetro
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetMetroOk() (*FindDeviceById200ResponseFacilityMetro, bool) {
	if o == nil || o.Metro == nil {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *Device) HasMetro() bool {
	if o != nil && o.Metro != nil {
		return true
	}

	return false
}

// SetMetro gets a reference to the given FindDeviceById200ResponseFacilityMetro and assigns it to the Metro field.
func (o *Device) SetMetro(v FindDeviceById200ResponseFacilityMetro) {
	o.Metro = &v
}

// GetNetworkPorts returns the NetworkPorts field value if set, zero value otherwise.
func (o *Device) GetNetworkPorts() []FindDeviceById200ResponseNetworkPortsInner {
	if o == nil || o.NetworkPorts == nil {
		var ret []FindDeviceById200ResponseNetworkPortsInner
		return ret
	}
	return o.NetworkPorts
}

// GetNetworkPortsOk returns a tuple with the NetworkPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetNetworkPortsOk() ([]FindDeviceById200ResponseNetworkPortsInner, bool) {
	if o == nil || o.NetworkPorts == nil {
		return nil, false
	}
	return o.NetworkPorts, true
}

// HasNetworkPorts returns a boolean if a field has been set.
func (o *Device) HasNetworkPorts() bool {
	if o != nil && o.NetworkPorts != nil {
		return true
	}

	return false
}

// SetNetworkPorts gets a reference to the given []FindDeviceById200ResponseNetworkPortsInner and assigns it to the NetworkPorts field.
func (o *Device) SetNetworkPorts(v []FindDeviceById200ResponseNetworkPortsInner) {
	o.NetworkPorts = v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *Device) GetOperatingSystem() FindDeviceById200ResponseOperatingSystem {
	if o == nil || o.OperatingSystem == nil {
		var ret FindDeviceById200ResponseOperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetOperatingSystemOk() (*FindDeviceById200ResponseOperatingSystem, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *Device) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given FindDeviceById200ResponseOperatingSystem and assigns it to the OperatingSystem field.
func (o *Device) SetOperatingSystem(v FindDeviceById200ResponseOperatingSystem) {
	o.OperatingSystem = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *Device) GetActions() []FindDeviceById200ResponseActionsInner {
	if o == nil || o.Actions == nil {
		var ret []FindDeviceById200ResponseActionsInner
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetActionsOk() ([]FindDeviceById200ResponseActionsInner, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *Device) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []FindDeviceById200ResponseActionsInner and assigns it to the Actions field.
func (o *Device) SetActions(v []FindDeviceById200ResponseActionsInner) {
	o.Actions = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Device) GetPlan() FindDeviceById200ResponsePlan {
	if o == nil || o.Plan == nil {
		var ret FindDeviceById200ResponsePlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetPlanOk() (*FindDeviceById200ResponsePlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *Device) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given FindDeviceById200ResponsePlan and assigns it to the Plan field.
func (o *Device) SetPlan(v FindDeviceById200ResponsePlan) {
	o.Plan = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *Device) GetProject() FindDeviceById200ResponseProject {
	if o == nil || o.Project == nil {
		var ret FindDeviceById200ResponseProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetProjectOk() (*FindDeviceById200ResponseProject, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *Device) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given FindDeviceById200ResponseProject and assigns it to the Project field.
func (o *Device) SetProject(v FindDeviceById200ResponseProject) {
	o.Project = &v
}

// GetProjectLite returns the ProjectLite field value if set, zero value otherwise.
func (o *Device) GetProjectLite() FindDeviceById200ResponseProjectLite {
	if o == nil || o.ProjectLite == nil {
		var ret FindDeviceById200ResponseProjectLite
		return ret
	}
	return *o.ProjectLite
}

// GetProjectLiteOk returns a tuple with the ProjectLite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetProjectLiteOk() (*FindDeviceById200ResponseProjectLite, bool) {
	if o == nil || o.ProjectLite == nil {
		return nil, false
	}
	return o.ProjectLite, true
}

// HasProjectLite returns a boolean if a field has been set.
func (o *Device) HasProjectLite() bool {
	if o != nil && o.ProjectLite != nil {
		return true
	}

	return false
}

// SetProjectLite gets a reference to the given FindDeviceById200ResponseProjectLite and assigns it to the ProjectLite field.
func (o *Device) SetProjectLite(v FindDeviceById200ResponseProjectLite) {
	o.ProjectLite = &v
}

// GetProvisioningEvents returns the ProvisioningEvents field value if set, zero value otherwise.
func (o *Device) GetProvisioningEvents() []FindInterconnectionEvents200Response {
	if o == nil || o.ProvisioningEvents == nil {
		var ret []FindInterconnectionEvents200Response
		return ret
	}
	return o.ProvisioningEvents
}

// GetProvisioningEventsOk returns a tuple with the ProvisioningEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetProvisioningEventsOk() ([]FindInterconnectionEvents200Response, bool) {
	if o == nil || o.ProvisioningEvents == nil {
		return nil, false
	}
	return o.ProvisioningEvents, true
}

// HasProvisioningEvents returns a boolean if a field has been set.
func (o *Device) HasProvisioningEvents() bool {
	if o != nil && o.ProvisioningEvents != nil {
		return true
	}

	return false
}

// SetProvisioningEvents gets a reference to the given []FindInterconnectionEvents200Response and assigns it to the ProvisioningEvents field.
func (o *Device) SetProvisioningEvents(v []FindInterconnectionEvents200Response) {
	o.ProvisioningEvents = v
}

// GetProvisioningPercentage returns the ProvisioningPercentage field value if set, zero value otherwise.
func (o *Device) GetProvisioningPercentage() float32 {
	if o == nil || o.ProvisioningPercentage == nil {
		var ret float32
		return ret
	}
	return *o.ProvisioningPercentage
}

// GetProvisioningPercentageOk returns a tuple with the ProvisioningPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetProvisioningPercentageOk() (*float32, bool) {
	if o == nil || o.ProvisioningPercentage == nil {
		return nil, false
	}
	return o.ProvisioningPercentage, true
}

// HasProvisioningPercentage returns a boolean if a field has been set.
func (o *Device) HasProvisioningPercentage() bool {
	if o != nil && o.ProvisioningPercentage != nil {
		return true
	}

	return false
}

// SetProvisioningPercentage gets a reference to the given float32 and assigns it to the ProvisioningPercentage field.
func (o *Device) SetProvisioningPercentage(v float32) {
	o.ProvisioningPercentage = &v
}

// GetRootPassword returns the RootPassword field value if set, zero value otherwise.
func (o *Device) GetRootPassword() string {
	if o == nil || o.RootPassword == nil {
		var ret string
		return ret
	}
	return *o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetRootPasswordOk() (*string, bool) {
	if o == nil || o.RootPassword == nil {
		return nil, false
	}
	return o.RootPassword, true
}

// HasRootPassword returns a boolean if a field has been set.
func (o *Device) HasRootPassword() bool {
	if o != nil && o.RootPassword != nil {
		return true
	}

	return false
}

// SetRootPassword gets a reference to the given string and assigns it to the RootPassword field.
func (o *Device) SetRootPassword(v string) {
	o.RootPassword = &v
}

// GetShortId returns the ShortId field value if set, zero value otherwise.
func (o *Device) GetShortId() string {
	if o == nil || o.ShortId == nil {
		var ret string
		return ret
	}
	return *o.ShortId
}

// GetShortIdOk returns a tuple with the ShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetShortIdOk() (*string, bool) {
	if o == nil || o.ShortId == nil {
		return nil, false
	}
	return o.ShortId, true
}

// HasShortId returns a boolean if a field has been set.
func (o *Device) HasShortId() bool {
	if o != nil && o.ShortId != nil {
		return true
	}

	return false
}

// SetShortId gets a reference to the given string and assigns it to the ShortId field.
func (o *Device) SetShortId(v string) {
	o.ShortId = &v
}

// GetSpotInstance returns the SpotInstance field value if set, zero value otherwise.
func (o *Device) GetSpotInstance() bool {
	if o == nil || o.SpotInstance == nil {
		var ret bool
		return ret
	}
	return *o.SpotInstance
}

// GetSpotInstanceOk returns a tuple with the SpotInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetSpotInstanceOk() (*bool, bool) {
	if o == nil || o.SpotInstance == nil {
		return nil, false
	}
	return o.SpotInstance, true
}

// HasSpotInstance returns a boolean if a field has been set.
func (o *Device) HasSpotInstance() bool {
	if o != nil && o.SpotInstance != nil {
		return true
	}

	return false
}

// SetSpotInstance gets a reference to the given bool and assigns it to the SpotInstance field.
func (o *Device) SetSpotInstance(v bool) {
	o.SpotInstance = &v
}

// GetSpotPriceMax returns the SpotPriceMax field value if set, zero value otherwise.
func (o *Device) GetSpotPriceMax() float32 {
	if o == nil || o.SpotPriceMax == nil {
		var ret float32
		return ret
	}
	return *o.SpotPriceMax
}

// GetSpotPriceMaxOk returns a tuple with the SpotPriceMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetSpotPriceMaxOk() (*float32, bool) {
	if o == nil || o.SpotPriceMax == nil {
		return nil, false
	}
	return o.SpotPriceMax, true
}

// HasSpotPriceMax returns a boolean if a field has been set.
func (o *Device) HasSpotPriceMax() bool {
	if o != nil && o.SpotPriceMax != nil {
		return true
	}

	return false
}

// SetSpotPriceMax gets a reference to the given float32 and assigns it to the SpotPriceMax field.
func (o *Device) SetSpotPriceMax(v float32) {
	o.SpotPriceMax = &v
}

// GetSshKeys returns the SshKeys field value if set, zero value otherwise.
func (o *Device) GetSshKeys() []FindBatchById200ResponseDevicesInner {
	if o == nil || o.SshKeys == nil {
		var ret []FindBatchById200ResponseDevicesInner
		return ret
	}
	return o.SshKeys
}

// GetSshKeysOk returns a tuple with the SshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetSshKeysOk() ([]FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || o.SshKeys == nil {
		return nil, false
	}
	return o.SshKeys, true
}

// HasSshKeys returns a boolean if a field has been set.
func (o *Device) HasSshKeys() bool {
	if o != nil && o.SshKeys != nil {
		return true
	}

	return false
}

// SetSshKeys gets a reference to the given []FindBatchById200ResponseDevicesInner and assigns it to the SshKeys field.
func (o *Device) SetSshKeys(v []FindBatchById200ResponseDevicesInner) {
	o.SshKeys = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Device) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Device) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Device) SetState(v string) {
	o.State = &v
}

// GetSwitchUuid returns the SwitchUuid field value if set, zero value otherwise.
func (o *Device) GetSwitchUuid() string {
	if o == nil || o.SwitchUuid == nil {
		var ret string
		return ret
	}
	return *o.SwitchUuid
}

// GetSwitchUuidOk returns a tuple with the SwitchUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetSwitchUuidOk() (*string, bool) {
	if o == nil || o.SwitchUuid == nil {
		return nil, false
	}
	return o.SwitchUuid, true
}

// HasSwitchUuid returns a boolean if a field has been set.
func (o *Device) HasSwitchUuid() bool {
	if o != nil && o.SwitchUuid != nil {
		return true
	}

	return false
}

// SetSwitchUuid gets a reference to the given string and assigns it to the SwitchUuid field.
func (o *Device) SetSwitchUuid(v string) {
	o.SwitchUuid = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Device) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Device) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Device) SetTags(v []string) {
	o.Tags = v
}

// GetTerminationTime returns the TerminationTime field value if set, zero value otherwise.
func (o *Device) GetTerminationTime() time.Time {
	if o == nil || o.TerminationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.TerminationTime
}

// GetTerminationTimeOk returns a tuple with the TerminationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetTerminationTimeOk() (*time.Time, bool) {
	if o == nil || o.TerminationTime == nil {
		return nil, false
	}
	return o.TerminationTime, true
}

// HasTerminationTime returns a boolean if a field has been set.
func (o *Device) HasTerminationTime() bool {
	if o != nil && o.TerminationTime != nil {
		return true
	}

	return false
}

// SetTerminationTime gets a reference to the given time.Time and assigns it to the TerminationTime field.
func (o *Device) SetTerminationTime(v time.Time) {
	o.TerminationTime = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Device) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Device) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Device) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Device) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Device) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *Device) SetUser(v string) {
	o.User = &v
}

// GetUserdata returns the Userdata field value if set, zero value otherwise.
func (o *Device) GetUserdata() string {
	if o == nil || o.Userdata == nil {
		var ret string
		return ret
	}
	return *o.Userdata
}

// GetUserdataOk returns a tuple with the Userdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetUserdataOk() (*string, bool) {
	if o == nil || o.Userdata == nil {
		return nil, false
	}
	return o.Userdata, true
}

// HasUserdata returns a boolean if a field has been set.
func (o *Device) HasUserdata() bool {
	if o != nil && o.Userdata != nil {
		return true
	}

	return false
}

// SetUserdata gets a reference to the given string and assigns it to the Userdata field.
func (o *Device) SetUserdata(v string) {
	o.Userdata = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *Device) GetVolumes() []FindBatchById200ResponseDevicesInner {
	if o == nil || o.Volumes == nil {
		var ret []FindBatchById200ResponseDevicesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Device) GetVolumesOk() ([]FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *Device) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []FindBatchById200ResponseDevicesInner and assigns it to the Volumes field.
func (o *Device) SetVolumes(v []FindBatchById200ResponseDevicesInner) {
	o.Volumes = v
}

func (o Device) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AlwaysPxe != nil {
		toSerialize["always_pxe"] = o.AlwaysPxe
	}
	if o.BillingCycle != nil {
		toSerialize["billing_cycle"] = o.BillingCycle
	}
	if o.BondingMode != nil {
		toSerialize["bonding_mode"] = o.BondingMode
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.Customdata != nil {
		toSerialize["customdata"] = o.Customdata
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.HardwareReservation != nil {
		toSerialize["hardware_reservation"] = o.HardwareReservation
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.IpAddresses != nil {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	if o.IpxeScriptUrl != nil {
		toSerialize["ipxe_script_url"] = o.IpxeScriptUrl
	}
	if o.Iqn != nil {
		toSerialize["iqn"] = o.Iqn
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.Metro != nil {
		toSerialize["metro"] = o.Metro
	}
	if o.NetworkPorts != nil {
		toSerialize["network_ports"] = o.NetworkPorts
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectLite != nil {
		toSerialize["project_lite"] = o.ProjectLite
	}
	if o.ProvisioningEvents != nil {
		toSerialize["provisioning_events"] = o.ProvisioningEvents
	}
	if o.ProvisioningPercentage != nil {
		toSerialize["provisioning_percentage"] = o.ProvisioningPercentage
	}
	if o.RootPassword != nil {
		toSerialize["root_password"] = o.RootPassword
	}
	if o.ShortId != nil {
		toSerialize["short_id"] = o.ShortId
	}
	if o.SpotInstance != nil {
		toSerialize["spot_instance"] = o.SpotInstance
	}
	if o.SpotPriceMax != nil {
		toSerialize["spot_price_max"] = o.SpotPriceMax
	}
	if o.SshKeys != nil {
		toSerialize["ssh_keys"] = o.SshKeys
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.SwitchUuid != nil {
		toSerialize["switch_uuid"] = o.SwitchUuid
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TerminationTime != nil {
		toSerialize["termination_time"] = o.TerminationTime
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Userdata != nil {
		toSerialize["userdata"] = o.Userdata
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	return json.Marshal(toSerialize)
}

type NullableDevice struct {
	value *Device
	isSet bool
}

func (v NullableDevice) Get() *Device {
	return v.value
}

func (v *NullableDevice) Set(val *Device) {
	v.value = val
	v.isSet = true
}

func (v NullableDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevice(val *Device) *NullableDevice {
	return &NullableDevice{value: val, isSet: true}
}

func (v NullableDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
