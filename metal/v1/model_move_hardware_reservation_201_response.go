/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// MoveHardwareReservation201Response struct for MoveHardwareReservation201Response
type MoveHardwareReservation201Response struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Amount that will be charged for every billing_cycle.
	CustomRate *float32                           `json:"custom_rate,omitempty"`
	Device     *FindDeviceById200Response         `json:"device,omitempty"`
	Facility   *FindDeviceById200ResponseFacility `json:"facility,omitempty"`
	Href       *string                            `json:"href,omitempty"`
	Id         *string                            `json:"id,omitempty"`
	// Whether this Device requires assistance from Metal Equinix.
	NeedOfService *bool                                                                                       `json:"need_of_service,omitempty"`
	Plan          *FindDeviceById200ResponsePlan                                                              `json:"plan,omitempty"`
	Project       *GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject `json:"project,omitempty"`
	// Whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first.
	Provisionable *bool `json:"provisionable,omitempty"`
	// Short version of the ID.
	ShortId *string `json:"short_id,omitempty"`
	// Whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix
	Spare *bool `json:"spare,omitempty"`
	// Switch short id. This can be used to determine if two devices are connected to the same switch, for example.
	SwitchUuid *string `json:"switch_uuid,omitempty"`
}

// NewMoveHardwareReservation201Response instantiates a new MoveHardwareReservation201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveHardwareReservation201Response() *MoveHardwareReservation201Response {
	this := MoveHardwareReservation201Response{}
	return &this
}

// NewMoveHardwareReservation201ResponseWithDefaults instantiates a new MoveHardwareReservation201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveHardwareReservation201ResponseWithDefaults() *MoveHardwareReservation201Response {
	this := MoveHardwareReservation201Response{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MoveHardwareReservation201Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCustomRate returns the CustomRate field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetCustomRate() float32 {
	if o == nil || o.CustomRate == nil {
		var ret float32
		return ret
	}
	return *o.CustomRate
}

// GetCustomRateOk returns a tuple with the CustomRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetCustomRateOk() (*float32, bool) {
	if o == nil || o.CustomRate == nil {
		return nil, false
	}
	return o.CustomRate, true
}

// HasCustomRate returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasCustomRate() bool {
	if o != nil && o.CustomRate != nil {
		return true
	}

	return false
}

// SetCustomRate gets a reference to the given float32 and assigns it to the CustomRate field.
func (o *MoveHardwareReservation201Response) SetCustomRate(v float32) {
	o.CustomRate = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetDevice() FindDeviceById200Response {
	if o == nil || o.Device == nil {
		var ret FindDeviceById200Response
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetDeviceOk() (*FindDeviceById200Response, bool) {
	if o == nil || o.Device == nil {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given FindDeviceById200Response and assigns it to the Device field.
func (o *MoveHardwareReservation201Response) SetDevice(v FindDeviceById200Response) {
	o.Device = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetFacility() FindDeviceById200ResponseFacility {
	if o == nil || o.Facility == nil {
		var ret FindDeviceById200ResponseFacility
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetFacilityOk() (*FindDeviceById200ResponseFacility, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given FindDeviceById200ResponseFacility and assigns it to the Facility field.
func (o *MoveHardwareReservation201Response) SetFacility(v FindDeviceById200ResponseFacility) {
	o.Facility = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *MoveHardwareReservation201Response) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MoveHardwareReservation201Response) SetId(v string) {
	o.Id = &v
}

// GetNeedOfService returns the NeedOfService field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetNeedOfService() bool {
	if o == nil || o.NeedOfService == nil {
		var ret bool
		return ret
	}
	return *o.NeedOfService
}

// GetNeedOfServiceOk returns a tuple with the NeedOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetNeedOfServiceOk() (*bool, bool) {
	if o == nil || o.NeedOfService == nil {
		return nil, false
	}
	return o.NeedOfService, true
}

// HasNeedOfService returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasNeedOfService() bool {
	if o != nil && o.NeedOfService != nil {
		return true
	}

	return false
}

// SetNeedOfService gets a reference to the given bool and assigns it to the NeedOfService field.
func (o *MoveHardwareReservation201Response) SetNeedOfService(v bool) {
	o.NeedOfService = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetPlan() FindDeviceById200ResponsePlan {
	if o == nil || o.Plan == nil {
		var ret FindDeviceById200ResponsePlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetPlanOk() (*FindDeviceById200ResponsePlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given FindDeviceById200ResponsePlan and assigns it to the Plan field.
func (o *MoveHardwareReservation201Response) SetPlan(v FindDeviceById200ResponsePlan) {
	o.Plan = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetProject() GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject {
	if o == nil || o.Project == nil {
		var ret GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetProjectOk() (*GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject and assigns it to the Project field.
func (o *MoveHardwareReservation201Response) SetProject(v GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject) {
	o.Project = &v
}

// GetProvisionable returns the Provisionable field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetProvisionable() bool {
	if o == nil || o.Provisionable == nil {
		var ret bool
		return ret
	}
	return *o.Provisionable
}

// GetProvisionableOk returns a tuple with the Provisionable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetProvisionableOk() (*bool, bool) {
	if o == nil || o.Provisionable == nil {
		return nil, false
	}
	return o.Provisionable, true
}

// HasProvisionable returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasProvisionable() bool {
	if o != nil && o.Provisionable != nil {
		return true
	}

	return false
}

// SetProvisionable gets a reference to the given bool and assigns it to the Provisionable field.
func (o *MoveHardwareReservation201Response) SetProvisionable(v bool) {
	o.Provisionable = &v
}

// GetShortId returns the ShortId field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetShortId() string {
	if o == nil || o.ShortId == nil {
		var ret string
		return ret
	}
	return *o.ShortId
}

// GetShortIdOk returns a tuple with the ShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetShortIdOk() (*string, bool) {
	if o == nil || o.ShortId == nil {
		return nil, false
	}
	return o.ShortId, true
}

// HasShortId returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasShortId() bool {
	if o != nil && o.ShortId != nil {
		return true
	}

	return false
}

// SetShortId gets a reference to the given string and assigns it to the ShortId field.
func (o *MoveHardwareReservation201Response) SetShortId(v string) {
	o.ShortId = &v
}

// GetSpare returns the Spare field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetSpare() bool {
	if o == nil || o.Spare == nil {
		var ret bool
		return ret
	}
	return *o.Spare
}

// GetSpareOk returns a tuple with the Spare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetSpareOk() (*bool, bool) {
	if o == nil || o.Spare == nil {
		return nil, false
	}
	return o.Spare, true
}

// HasSpare returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasSpare() bool {
	if o != nil && o.Spare != nil {
		return true
	}

	return false
}

// SetSpare gets a reference to the given bool and assigns it to the Spare field.
func (o *MoveHardwareReservation201Response) SetSpare(v bool) {
	o.Spare = &v
}

// GetSwitchUuid returns the SwitchUuid field value if set, zero value otherwise.
func (o *MoveHardwareReservation201Response) GetSwitchUuid() string {
	if o == nil || o.SwitchUuid == nil {
		var ret string
		return ret
	}
	return *o.SwitchUuid
}

// GetSwitchUuidOk returns a tuple with the SwitchUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservation201Response) GetSwitchUuidOk() (*string, bool) {
	if o == nil || o.SwitchUuid == nil {
		return nil, false
	}
	return o.SwitchUuid, true
}

// HasSwitchUuid returns a boolean if a field has been set.
func (o *MoveHardwareReservation201Response) HasSwitchUuid() bool {
	if o != nil && o.SwitchUuid != nil {
		return true
	}

	return false
}

// SetSwitchUuid gets a reference to the given string and assigns it to the SwitchUuid field.
func (o *MoveHardwareReservation201Response) SetSwitchUuid(v string) {
	o.SwitchUuid = &v
}

func (o MoveHardwareReservation201Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CustomRate != nil {
		toSerialize["custom_rate"] = o.CustomRate
	}
	if o.Device != nil {
		toSerialize["device"] = o.Device
	}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NeedOfService != nil {
		toSerialize["need_of_service"] = o.NeedOfService
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Provisionable != nil {
		toSerialize["provisionable"] = o.Provisionable
	}
	if o.ShortId != nil {
		toSerialize["short_id"] = o.ShortId
	}
	if o.Spare != nil {
		toSerialize["spare"] = o.Spare
	}
	if o.SwitchUuid != nil {
		toSerialize["switch_uuid"] = o.SwitchUuid
	}
	return json.Marshal(toSerialize)
}

type NullableMoveHardwareReservation201Response struct {
	value *MoveHardwareReservation201Response
	isSet bool
}

func (v NullableMoveHardwareReservation201Response) Get() *MoveHardwareReservation201Response {
	return v.value
}

func (v *NullableMoveHardwareReservation201Response) Set(val *MoveHardwareReservation201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveHardwareReservation201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveHardwareReservation201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveHardwareReservation201Response(val *MoveHardwareReservation201Response) *NullableMoveHardwareReservation201Response {
	return &NullableMoveHardwareReservation201Response{value: val, isSet: true}
}

func (v NullableMoveHardwareReservation201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveHardwareReservation201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
