/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateDeviceRequestOneOf1AllOf struct for CreateDeviceRequestOneOf1AllOf
type CreateDeviceRequestOneOf1AllOf struct {
	Facility CreateDeviceRequestOneOf1AllOfFacility `json:"facility"`
}

// NewCreateDeviceRequestOneOf1AllOf instantiates a new CreateDeviceRequestOneOf1AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceRequestOneOf1AllOf(facility CreateDeviceRequestOneOf1AllOfFacility) *CreateDeviceRequestOneOf1AllOf {
	this := CreateDeviceRequestOneOf1AllOf{}
	this.Facility = facility
	return &this
}

// NewCreateDeviceRequestOneOf1AllOfWithDefaults instantiates a new CreateDeviceRequestOneOf1AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceRequestOneOf1AllOfWithDefaults() *CreateDeviceRequestOneOf1AllOf {
	this := CreateDeviceRequestOneOf1AllOf{}
	return &this
}

// GetFacility returns the Facility field value
func (o *CreateDeviceRequestOneOf1AllOf) GetFacility() CreateDeviceRequestOneOf1AllOfFacility {
	if o == nil {
		var ret CreateDeviceRequestOneOf1AllOfFacility
		return ret
	}

	return o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequestOneOf1AllOf) GetFacilityOk() (*CreateDeviceRequestOneOf1AllOfFacility, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Facility, true
}

// SetFacility sets field value
func (o *CreateDeviceRequestOneOf1AllOf) SetFacility(v CreateDeviceRequestOneOf1AllOfFacility) {
	o.Facility = v
}

func (o CreateDeviceRequestOneOf1AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["facility"] = o.Facility
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDeviceRequestOneOf1AllOf struct {
	value *CreateDeviceRequestOneOf1AllOf
	isSet bool
}

func (v NullableCreateDeviceRequestOneOf1AllOf) Get() *CreateDeviceRequestOneOf1AllOf {
	return v.value
}

func (v *NullableCreateDeviceRequestOneOf1AllOf) Set(val *CreateDeviceRequestOneOf1AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceRequestOneOf1AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceRequestOneOf1AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceRequestOneOf1AllOf(val *CreateDeviceRequestOneOf1AllOf) *NullableCreateDeviceRequestOneOf1AllOf {
	return &NullableCreateDeviceRequestOneOf1AllOf{value: val, isSet: true}
}

func (v NullableCreateDeviceRequestOneOf1AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceRequestOneOf1AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
