/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindDeviceMetadataByID200ResponseNetworkNetworkBonding struct for FindDeviceMetadataByID200ResponseNetworkNetworkBonding
type FindDeviceMetadataByID200ResponseNetworkNetworkBonding struct {
	LinkAggregation *string `json:"link_aggregation,omitempty"`
	Mac             *string `json:"mac,omitempty"`
	Mode            *int32  `json:"mode,omitempty"`
}

// NewFindDeviceMetadataByID200ResponseNetworkNetworkBonding instantiates a new FindDeviceMetadataByID200ResponseNetworkNetworkBonding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindDeviceMetadataByID200ResponseNetworkNetworkBonding() *FindDeviceMetadataByID200ResponseNetworkNetworkBonding {
	this := FindDeviceMetadataByID200ResponseNetworkNetworkBonding{}
	return &this
}

// NewFindDeviceMetadataByID200ResponseNetworkNetworkBondingWithDefaults instantiates a new FindDeviceMetadataByID200ResponseNetworkNetworkBonding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindDeviceMetadataByID200ResponseNetworkNetworkBondingWithDefaults() *FindDeviceMetadataByID200ResponseNetworkNetworkBonding {
	this := FindDeviceMetadataByID200ResponseNetworkNetworkBonding{}
	return &this
}

// GetLinkAggregation returns the LinkAggregation field value if set, zero value otherwise.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetLinkAggregation() string {
	if o == nil || o.LinkAggregation == nil {
		var ret string
		return ret
	}
	return *o.LinkAggregation
}

// GetLinkAggregationOk returns a tuple with the LinkAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetLinkAggregationOk() (*string, bool) {
	if o == nil || o.LinkAggregation == nil {
		return nil, false
	}
	return o.LinkAggregation, true
}

// HasLinkAggregation returns a boolean if a field has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) HasLinkAggregation() bool {
	if o != nil && o.LinkAggregation != nil {
		return true
	}

	return false
}

// SetLinkAggregation gets a reference to the given string and assigns it to the LinkAggregation field.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) SetLinkAggregation(v string) {
	o.LinkAggregation = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) SetMac(v string) {
	o.Mac = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetMode() int32 {
	if o == nil || o.Mode == nil {
		var ret int32
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) GetModeOk() (*int32, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given int32 and assigns it to the Mode field.
func (o *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) SetMode(v int32) {
	o.Mode = &v
}

func (o FindDeviceMetadataByID200ResponseNetworkNetworkBonding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkAggregation != nil {
		toSerialize["link_aggregation"] = o.LinkAggregation
	}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding struct {
	value *FindDeviceMetadataByID200ResponseNetworkNetworkBonding
	isSet bool
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) Get() *FindDeviceMetadataByID200ResponseNetworkNetworkBonding {
	return v.value
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) Set(val *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) {
	v.value = val
	v.isSet = true
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) IsSet() bool {
	return v.isSet
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding(val *FindDeviceMetadataByID200ResponseNetworkNetworkBonding) *NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding {
	return &NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding{value: val, isSet: true}
}

func (v NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindDeviceMetadataByID200ResponseNetworkNetworkBonding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
