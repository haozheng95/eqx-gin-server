/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindDeviceById200ResponseNetworkPortsInnerBond struct for FindDeviceById200ResponseNetworkPortsInnerBond
type FindDeviceById200ResponseNetworkPortsInnerBond struct {
	// ID of the bonding port
	Id *string `json:"id,omitempty"`
	// Name of the port interface for the bond (\"bond0\")
	Name *string `json:"name,omitempty"`
}

// NewFindDeviceById200ResponseNetworkPortsInnerBond instantiates a new FindDeviceById200ResponseNetworkPortsInnerBond object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindDeviceById200ResponseNetworkPortsInnerBond() *FindDeviceById200ResponseNetworkPortsInnerBond {
	this := FindDeviceById200ResponseNetworkPortsInnerBond{}
	return &this
}

// NewFindDeviceById200ResponseNetworkPortsInnerBondWithDefaults instantiates a new FindDeviceById200ResponseNetworkPortsInnerBond object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindDeviceById200ResponseNetworkPortsInnerBondWithDefaults() *FindDeviceById200ResponseNetworkPortsInnerBond {
	this := FindDeviceById200ResponseNetworkPortsInnerBond{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FindDeviceById200ResponseNetworkPortsInnerBond) SetName(v string) {
	o.Name = &v
}

func (o FindDeviceById200ResponseNetworkPortsInnerBond) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFindDeviceById200ResponseNetworkPortsInnerBond struct {
	value *FindDeviceById200ResponseNetworkPortsInnerBond
	isSet bool
}

func (v NullableFindDeviceById200ResponseNetworkPortsInnerBond) Get() *FindDeviceById200ResponseNetworkPortsInnerBond {
	return v.value
}

func (v *NullableFindDeviceById200ResponseNetworkPortsInnerBond) Set(val *FindDeviceById200ResponseNetworkPortsInnerBond) {
	v.value = val
	v.isSet = true
}

func (v NullableFindDeviceById200ResponseNetworkPortsInnerBond) IsSet() bool {
	return v.isSet
}

func (v *NullableFindDeviceById200ResponseNetworkPortsInnerBond) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindDeviceById200ResponseNetworkPortsInnerBond(val *FindDeviceById200ResponseNetworkPortsInnerBond) *NullableFindDeviceById200ResponseNetworkPortsInnerBond {
	return &NullableFindDeviceById200ResponseNetworkPortsInnerBond{value: val, isSet: true}
}

func (v NullableFindDeviceById200ResponseNetworkPortsInnerBond) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindDeviceById200ResponseNetworkPortsInnerBond) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
