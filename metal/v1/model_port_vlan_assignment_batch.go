/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// PortVlanAssignmentBatch struct for PortVlanAssignmentBatch
type PortVlanAssignmentBatch struct {
	CreatedAt       *time.Time                                                                 `json:"created_at,omitempty"`
	ErrorMessages   []string                                                                   `json:"error_messages,omitempty"`
	Id              *string                                                                    `json:"id,omitempty"`
	Port            *FindDeviceById200ResponseNetworkPortsInner                                `json:"port,omitempty"`
	Quantity        *int32                                                                     `json:"quantity,omitempty"`
	State           *string                                                                    `json:"state,omitempty"`
	UpdatedAt       *time.Time                                                                 `json:"updated_at,omitempty"`
	VlanAssignments []FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner `json:"vlan_assignments,omitempty"`
}

// NewPortVlanAssignmentBatch instantiates a new PortVlanAssignmentBatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortVlanAssignmentBatch() *PortVlanAssignmentBatch {
	this := PortVlanAssignmentBatch{}
	return &this
}

// NewPortVlanAssignmentBatchWithDefaults instantiates a new PortVlanAssignmentBatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortVlanAssignmentBatchWithDefaults() *PortVlanAssignmentBatch {
	this := PortVlanAssignmentBatch{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PortVlanAssignmentBatch) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetErrorMessages() []string {
	if o == nil || o.ErrorMessages == nil {
		var ret []string
		return ret
	}
	return o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetErrorMessagesOk() ([]string, bool) {
	if o == nil || o.ErrorMessages == nil {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasErrorMessages() bool {
	if o != nil && o.ErrorMessages != nil {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given []string and assigns it to the ErrorMessages field.
func (o *PortVlanAssignmentBatch) SetErrorMessages(v []string) {
	o.ErrorMessages = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortVlanAssignmentBatch) SetId(v string) {
	o.Id = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetPort() FindDeviceById200ResponseNetworkPortsInner {
	if o == nil || o.Port == nil {
		var ret FindDeviceById200ResponseNetworkPortsInner
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetPortOk() (*FindDeviceById200ResponseNetworkPortsInner, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given FindDeviceById200ResponseNetworkPortsInner and assigns it to the Port field.
func (o *PortVlanAssignmentBatch) SetPort(v FindDeviceById200ResponseNetworkPortsInner) {
	o.Port = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *PortVlanAssignmentBatch) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PortVlanAssignmentBatch) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PortVlanAssignmentBatch) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVlanAssignments returns the VlanAssignments field value if set, zero value otherwise.
func (o *PortVlanAssignmentBatch) GetVlanAssignments() []FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner {
	if o == nil || o.VlanAssignments == nil {
		var ret []FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner
		return ret
	}
	return o.VlanAssignments
}

// GetVlanAssignmentsOk returns a tuple with the VlanAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentBatch) GetVlanAssignmentsOk() ([]FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner, bool) {
	if o == nil || o.VlanAssignments == nil {
		return nil, false
	}
	return o.VlanAssignments, true
}

// HasVlanAssignments returns a boolean if a field has been set.
func (o *PortVlanAssignmentBatch) HasVlanAssignments() bool {
	if o != nil && o.VlanAssignments != nil {
		return true
	}

	return false
}

// SetVlanAssignments gets a reference to the given []FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner and assigns it to the VlanAssignments field.
func (o *PortVlanAssignmentBatch) SetVlanAssignments(v []FindPortVlanAssignmentBatches200ResponseBatchesInnerVlanAssignmentsInner) {
	o.VlanAssignments = v
}

func (o PortVlanAssignmentBatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.ErrorMessages != nil {
		toSerialize["error_messages"] = o.ErrorMessages
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.VlanAssignments != nil {
		toSerialize["vlan_assignments"] = o.VlanAssignments
	}
	return json.Marshal(toSerialize)
}

type NullablePortVlanAssignmentBatch struct {
	value *PortVlanAssignmentBatch
	isSet bool
}

func (v NullablePortVlanAssignmentBatch) Get() *PortVlanAssignmentBatch {
	return v.value
}

func (v *NullablePortVlanAssignmentBatch) Set(val *PortVlanAssignmentBatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePortVlanAssignmentBatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePortVlanAssignmentBatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortVlanAssignmentBatch(val *PortVlanAssignmentBatch) *NullablePortVlanAssignmentBatch {
	return &NullablePortVlanAssignmentBatch{value: val, isSet: true}
}

func (v NullablePortVlanAssignmentBatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortVlanAssignmentBatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
